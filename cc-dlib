#!/bin/sh

if [ $# -lt 2 ]
then
  echo "cc-dlib: usage: [@dir] basename objects ..." 1>&2
  exit 1
fi

#
# check if new base dir was specified
#

BASE_DIR="."
echo "$1" | grep '^@' 2>&1 >/dev/null
if [ $? -eq 0 ]
then
  BASE_DIR=`echo $1 | sed 's/^@//g'`
  shift
fi

LD_TYPE=`head -n 1 ${BASE_DIR}/conf-ldtype`
if [ $? -ne 0 ]
then
  fatal "could not read ${BASE_DIR}/conf-ldtype"
fi
LD=`head -n 1 ${BASE_DIR}/conf-ld`
if [ $? -ne 0 ]
then
  fatal "could not read ${BASE_DIR}/conf-ld"
fi
SYS_TYPE=`head -n 1 ${BASE_DIR}/conf-systype`
if [ $? -ne 0 ]
then
  fatal "could not read ${BASE_DIR}/conf-systype"
fi
SO_SUFFIX=`head -n 1 ${BASE_DIR}/conf-sosuffix`
if [ $? -ne 0 ]
then
  fatal "could not read ${BASE_DIR}/conf-sosuffix"
fi

main="$1"
shift

# read in optional flag files
if [ -f "${main}.lff" ]
then
  for f in `cat "${main}.lff"`
  do
    targ="`dirname $main`/`dirname $f`/`basename $f`"
    FLAGS="`cat $targ 2>/dev/null`"
    LDFLAGS="${LDFLAGS} ${FLAGS}"
  done
fi

# library name
libname=`./mk-libname "${main}"`
if [ $? -ne 0 ]
then
  fatal "could not execute ./mk-libname"
fi

# major version number
if [ -f ${main}.vmj ]
then
  VMJ=`head -n 1 ${main}.vmj 2>/dev/null`
  if [ $? -ne 0 ]
  then
    fatal "could not read ${main}.vmj"
  fi
fi

# minor version number
if [ -f ${main}.vmn ]
then
  VMN=`head -n 1 ${main}.vmn 2>/dev/null`
  if [ $? -ne 0 ]
  then
    fatal "could not read ${main}.vmn"
  fi
fi

rm -f "${libname}"

case "${LD_TYPE}" in
  GCC)
    case "${SYS_TYPE}" in
      DARWIN)
        if [ ! -z ${vmj} ]
        then
          if [ ! -z ${vmn} ]
          then
            ver="${vmj}.${vmn}.0"
          else
            ver="${vmj}.0.0"
          fi
        else
          ver="1.0.0"
        fi
        release=`uname -r | awk -F. '{print $1}'`
        if [ ${release} -gt 7 ]
        then
          # the list of darwin compiler bugs makes impressive reading
          ${LD} -dynamiclib \
                -flat_namespace \
                -undefined suppress \
                -current_version "${ver}" \
                -install_name "${libname}" \
                -o "${libname}" ${1+"$@"} ${LDFLAGS}
        else
          libtool -dynamic \
            -current_version "${ver}" \
            -install_name "${libname}" \
            -o "${libname}" ${1+"$@"} ${LDFLAGS} -lc
        fi
        ;;
      SUNOS)
        ld -G -z text -o "${libname}" ${1+"$@"} ${LDFLAGS} -lc
        ;;
      MS_WINDOWS)
        ${LD} -shared -o "${libname}" ${1+"$@"} ${LDFLAGS}
        ;;
      *)
        ${LD} -shared -Wl,-soname,"${libname}" -o "${libname}" ${1+"$@"} ${LDFLAGS} -lc
        ;;
    esac
    ;;
  HP_C)
    ${LD} -b -o "${libname}" ${1+"$@"} ${LDFLAGS}
    ;;
  COMPAQ_C)
    ${LD} -no_archive -shared -o "${libname}" ${1+"$@"} ${LDFLAGS}
    ;;
  INTEL)
    ${LD} -shared -o "${libname}" ${1+"$@"} ${LDFLAGS}
    ;;
  SUN_C)
    ${LD} -G -z text -o "${libname}" ${1+"$@"} ${LDFLAGS}
    ;;
  MIPSPRO)
    ${LD} -shared -soname "${libname}" -o "${libname}" ${1+"$@"} ${LDFLAGS}
    ;;
  *)
    fatal "unknown compiler - cannot produce shared objects"
    ;;
esac

if [ $? -ne 0 ]
then
  exit 1
fi
echo "${libname}" >> "${main}".vlb
