#!/bin/sh

PROGRAM_NAME="mk-dlflag"

warning()
{
  echo "${PROGRAM_NAME}: warn: $1" 1>&2
}

error()
{
  echo "${PROGRAM_NAME}: error: $1" 1>&2
}

fatal()
{
  echo "${PROGRAM_NAME}: fatal: $1" 1>&2
  exit 1
}

fatal()
{
  echo "${PROGRAM_NAME}: fatal: $1" 1>&2
  exit 1
}

#
# check if new base dir was specified
#

BASE_DIR="."
if [ $# -eq 2 ]
then
  BASE_DIR=`echo "$1" | sed 's/^@//g'`
  shift
fi

#
# Print additional compiler flags necessary to compile object files that
# can be used for shared libraries.
#

if [ -f "${BASE_DIR}/conf-x-cctype" ]
then
  CC_TYPE=`head -n 1 ${BASE_DIR}/conf-x-cctype`
  if [ $? -ne 0 ]
  then
    fatal "could not read ${BASE_DIR}/conf-x-cctype"
  fi
  SYS_TYPE=`head -n 1 ${BASE_DIR}/conf-x-systype`
  if [ $? -ne 0 ]
  then
    fatal "could not read ${BASE_DIR}/conf-x-systype"
  fi
else
  CC_TYPE=`head -n 1 ${BASE_DIR}/conf-cctype`
  if [ $? -ne 0 ]
  then
    fatal "could not read ${BASE_DIR}/conf-cctype"
  fi
  SYS_TYPE=`head -n 1 ${BASE_DIR}/conf-systype`
  if [ $? -ne 0 ]
  then
    fatal "could not read ${BASE_DIR}/conf-systype"
  fi
fi

case "${CC_TYPE}" in
  MINGW32)
    ;;
  GCC)
    case "${SYS_TYPE}" in
      DARWIN)
        echo '-dynamic'
        ;;
      MS_WINDOWS)
        ;;
      *)
        echo '-fPIC'
        ;;
    esac
    ;;
  HP_C)
    echo '+Z'
    ;;
  COMPAQ_C)
    echo '-shared'
    ;;
  INTEL)
    echo '-fpic'
    ;;
  SUN_C)
    # obsolete on SPARC? manual says -xcode=pic32 but this fails on x86
    echo '-KPIC'
    ;;
  MIPSPRO)
    echo '-KPIC'
    ;;
  *)
    fatal 'unknown compiler - cannot print dynamic library flags'
    ;;
esac
